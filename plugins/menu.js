import { readUsersDb } from '../lib/database.js';

// --- Elementos de Decoraci√≥n Aleatorios ---

const greetings = ["¬°Hola!", "¬°Bienvenido/a!", "¬°Qu√© tal!", "¬°Saludos!", "¬°Hey!"];
const titles = ["MEN√ö PRINCIPAL", "LISTA DE COMANDOS", "CENTRO DE AYUDA", "NAVEGADOR DE FUNCIONES"];
const emojis = ["üéÄ", "‚ú®", "üå∏", "ü§ñ", "‚öôÔ∏è", "üí°", "üìö", "üéÆ", "üë•", "üëë"];
const lineStyles = ["‚ïê", "‚îÄ", "‚îÅ", "‚îÑ", "‚îÖ", "‚îà", "‚îâ", "‚ïç", "‚ïå", "‚ïé"];

const categoryEmojis = {
  'general': 'üìú', 'descargas': 'üì•', 'diversion': 'üß∏', 'juegos': 'üéÆ',
  'grupos': 'üë•', 'propietario': 'üëë', 'herramientas': 'üõ†Ô∏è', 'informacion': 'üìö',
  'sub-bots': 'ü§ñ', 'ia': 'üß†', 'busquedas': 'üîé', 'otros': '‚öôÔ∏è'
};

// --- Funci√≥n para barajar un array (Fisher-Yates) ---
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

const menuCommand = {
  name: "menu",
  category: "general",
  description: "Muestra el men√∫ de comandos del bot de forma aleatoria y personalizada.",
  aliases: ["help", "ayuda"],

  async execute({ sock, msg, commands, config }) {
    const senderId = msg.key.participant || msg.key.remoteJid;
    const users = readUsersDb();
    const user = users[senderId] || {};

    // --- Seleccionar elementos aleatorios para esta invocaci√≥n ---
    const randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];
    const randomTitle = titles[Math.floor(Math.random() * titles.length)];
    const randomEmoji = () => emojis[Math.floor(Math.random() * emojis.length)];
    const line = lineStyles[Math.floor(Math.random() * lineStyles.length)].repeat(10);
    const topBorder = `‚ï≠${line}„Äé`;
    const midBorder = `‚îÇ`;
    const botBorder = `‚ï∞${line}„Äè`;

    // --- Construir Cabecera Personalizada ---
    let menuHeader = `${topBorder} ${randomEmoji()} *${randomTitle}* ${randomEmoji()} „Äè\n`;
    menuHeader += `${midBorder} ${randomGreeting}, *${user.name || msg.pushName}*!\n`;
    menuHeader += `${midBorder}\n`;
    menuHeader += `${midBorder} üë§ *Usuario:* ${user.name || 'No registrado'}\n`;
    menuHeader += `${midBorder} üéñÔ∏è *Nivel:* ${user.level || 0}\n`;
    menuHeader += `${midBorder} üí∞ *Balance:* ${user.balance || 0} monedas\n`;
    menuHeader += `${midBorder} ‚öôÔ∏è *Versi√≥n:* ${config.version || '1.0.0'}\n`;
    menuHeader += `${botBorder}\n\n`;

    // --- Agrupar y barajar categor√≠as ---
    const categories = {};
    commands.forEach(command => {
      if (!command.category || command.name === 'test') return;
      if (!categories[command.category]) categories[command.category] = [];
      categories[command.category].push(command.name);
    });

    const shuffledCategories = shuffleArray(Object.keys(categories));

    // --- Construir Cuerpo del Men√∫ ---
    let menuBody = '';
    for (const category of shuffledCategories) {
      const catEmoji = categoryEmojis[category.toLowerCase()] || '‚ú®';
      const catTitle = category.charAt(0).toUpperCase() + category.slice(1);

      menuBody += `${topBorder} ${catEmoji} *${catTitle}* „Äè\n`;

      const commandList = categories[category]
        .map(cmd => `${midBorder} ‚Ä∫ ${cmd}`)
        .join('\n');

      menuBody += `${commandList}\n`;
      menuBody += `${botBorder}\n\n`;
    }

    // --- Construir Pie de P√°gina ---
    let menuFooter = `${topBorder} ${randomEmoji()} *Cr√©ditos* ${randomEmoji()} „Äè\n`;
    menuFooter += `${midBorder} Creado por: *${config.ownerName}*\n`;
    menuFooter += `${midBorder} ¬°Disfruta del bot!\n`;
    menuFooter += `${botBorder}`;

    // --- Ensamblar y Enviar Men√∫ ---
    const fullMenuText = menuHeader + menuBody + menuFooter;

    await sock.sendMessage(
      msg.key.remoteJid,
      {
        text: fullMenuText,
        // Opcional: a√±adir una imagen o video de fondo si se desea
        // image: { url: 'URL_DE_IMAGEN' }
      },
      { quoted: msg }
    );
  }
};

export default menuCommand;
